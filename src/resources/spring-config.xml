<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 基本信息 -->
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/logistics"/>
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="user" value="root"/>
        <property name="password" value="huangdi"/>
        <!-- 其他配置 -->
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="3"/>
        <!--连接池中保留的最小连接数。Default: 3 -->
        <property name="minPoolSize" value="3"/>
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="5"/>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="3"/>
        <!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
        <property name="maxStatements" value="8"/>
        <!-- maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
        <property name="maxStatementsPerConnection" value="5"/>
        <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="1800"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <!--  依赖注入数据源，注入正是上文定义的dataSource-->
        <property name="dataSource" ref="dataSource"/>
                <!--  mappingResouces属性用来列出全部映射文件-->
        <property name="mappingResources">
             <list>
                 <!--以下用来列出所有的PO映射文件-->
                 <value>com/logistics/entity/User.hbm.xml</value>
                 <value>com/logistics/entity/Order.hbm.xml</value>
                 <value>com/logistics/entity/Record.hbm.xml</value>
            </list>
        </property>
        <!--定义Hibernate的SessionFactory的属性 -->
        <property name="hibernateProperties">
            <props>
                <!--  指定Hibernate的连接方言-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!--  不同数据库连接，启动时选择create,update,create-drop-->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.connection.release_mode">after_statement</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
            </props>
        </property>
    </bean>

    <!--  配置Person持久化类的DAO bean-->
    <bean id="userDao" class="com.logistics.dao.UserDao">
        <!--  采用依赖注入来传入SessionFactory的引用-->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="userService" class="com.logistics.service.UserServiceImpl.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="testAction" class="com.logistics.action.TestAction" scope="prototype">
        <property name="userService" ref="userService"/>
    </bean>

    <bean name="orderDao" class="com.logistics.dao.OrderDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean name="recordDao" class="com.logistics.dao.RecordDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


</beans>